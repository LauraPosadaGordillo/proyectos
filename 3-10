# calcular el area de un triangulo
def area_triangulo(base, altura):
    return (base * altura) / 2

base = float(input("Ingresa la base del triangulo: "))
altura = float(input("Ingresa la altura del triangulo: "))
print(f"el area del triangulo es: {area_triangulo(base, altura)}")



# calcualar la definitiva
def calcular_nota_definitiva():
    nota1 = float(input("ingresa la primera nota (20%): "))
    nota2 = float(input("ingresa la segunda nota (45%): "))
    nota3 = float(input("ingresa la tercera nota (35%): "))
    
    nota_definitiva = (nota1 * 0.20) + (nota2 * 0.45) + (nota3 * 0.35)
    print(f"La nota definitiva es: {nota_definitiva}")
# llamada a la funcion
calcular_nota_definitiva()



# verificar si una palabra esta en una lista de palabras
def palabra_en_lista(frase, palabra):
    lista_palabras = frase.split()
    return palabra in lista_palabras

frase = input("ingresa una frase: ")
palabra = input("ingresa la palabra a buscar: ")
if palabra_en_lista(frase, palabra):
    print("la palabra est치 en la lista")
else:
    print("la palabra no esta en la lista")



# ingresar dos numeros y mostrar el mayor o decir si son iguales              
def mayor(num1, num2):
    if num1 > num2:
        return num1
    elif num2 > num1:
        return num2
    else:
        return "los dos numeros son iguales"
num1 = float(input("ingresa el primer numero: "))
num2 = float(input("ingresa el segundo numero: "))
print(mayor(num1, num2))
   


# calcular factorial
def calcular_factorial():
    try:
        numero = int(input("ingresa un numero: "))
        if numero < 0:
            print("Error: el numero no debe ser negativo")
            return
        factorial = 1
        for i in range(1, numero + 1):
            factorial *= i
        print(f"el factorial de {numero} es {factorial}")
    except ValueError:
        print("error: no ingresaste un numero valido")
calcular_factorial()



# indica si el numero es par o si no es par
def verificar_par():
    entrada = input("ingresa un numero: ")
    try:
        numero = int(entrada)  
        if numero % 2 == 0:  # verificamos si es par
            print(f"{numero} es par")
        else:
            print(f"{numero} es impar")
    except ValueError:
        print("error: no ingresaste un numero valido")
verificar_par()



# convertir minutos a horas y minutos
def convertir_minutos():
    minutos = int(input("ingresa una cantidad de minutos: "))
    
    horas = minutos // 60
    minutos_restantes = minutos % 60
    
    print(f"{minutos} minutos son {horas} horas y {minutos_restantes} minutos")
# llamada a la funcion
convertir_minutos()



# caracteres que contiene la cadena
def contar_caracteres():
    cadena = input("ingresa una cadena de texto: ")
    if cadena:  # verifica si se ingreso
        print(f"la cadena tiene {len(cadena)} caracteres")
    else:
        print("error: no ingresaste una cadena de texto valida")
# llamada a la funci칩n
contar_caracteres()

 

# sumar dos digitos ingresados
def sumar_digitos():
    entrada = input("ingresa un numero de al menos dos digitos: ")
    try:
        numero = int(entrada)
        if numero < 10 and numero > -10:
            print("error: el numero debe tener al menos dos digitos")
            return
        suma = 0
        for digito in str(numero):
            if digito.isdigit():
                suma += int(digito)
        print(f"la suma de los digitos de {numero} es {suma}")
    except ValueError:
        print("error: no ingresaste un numero valido.")
# llamada a la funcion
sumar_digitos()



#  convertir dolares o euros a pesos colombianos
def conversor_monedas():
    tipo_moneda = input("quieres convertir desde d칩lares (USD) o euros (EUR)? ingresa 'USD' o 'EUR': ").upper()
    cantidad = float(input("ingresa la cantidad a convertir: "))
    
    if tipo_moneda == 'USD':
        pesos = cantidad * 4200
        print(f"{cantidad} dolares son {pesos} pesos colombianos")
    elif tipo_moneda == 'EUR':
        pesos = cantidad * 4700
        print(f"{cantidad} euros son {pesos} pesos colombianos")
    else:
        print("error: tipo de moneda no valido")
# llamada a la funci칩n
conversor_monedas()
